<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Jose M. Perez&#39;s Blog</title>
  <subtitle>Web development, performance, and some other good practices.</subtitle>
  <link href="/tag/a11y/atom.xml" rel="self"/>
  
  <link href="https://jmperezperez.com/"/>
  <updated>2018-12-16T17:51:46.000Z</updated>
  <id>https://jmperezperez.com/</id>
  
  <author>
    <name>Jose M. Perez</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hiding the outline or :focus ring in an accessible way</title>
    <link href="https://jmperezperez.com//outline-focus-ring-a11y"/>
    <id>https://jmperezperez.com//outline-focus-ring-a11y</id>
    <published>2017-08-14T15:50:00.000Z</published>
    <updated>2018-12-16T17:51:46.000Z</updated>
    
    <content type="html"><![CDATA[<p>Last week I came across <a href="https://hackernoon.com/removing-that-ugly-focus-ring-and-keeping-it-too-6c8727fefcd2">Removing that ugly :focus ring (and keeping it too)</a>. It’s a really good post about  <code>outline</code>, that CSS property lots of devs tend to hide. The post explains some a11y-friendly alternatives to not display it, and show it when needed.</p>
<span id="more"></span>

<p>In the past I have made the same mistake of hiding the <code>outline</code> altogether, but no more!</p>
<p>A few months ago I came across a similar technique David Gilbertson describes, while inspecting the markup on Youtube.com. They take accessibility seriously and their player is a very good example to get inspiration from.</p>
<p>I then applied it to one of the Spotify sites I work on. Take <a href="https://open.spotify.com/track/2ZBNclC5wm4GtiWaeh0DMx?fo=1">this Spotify page as an example</a>. This is how it works:</p>
<ol>
<li>Add a <code>no-focus-outline</code> CSS class to the <code>&lt;html&gt;</code> element.</li>
<li>Hide the outline using CSS only in <code>&lt;a&gt;</code> and <code>&lt;button&gt;</code> elements that descend from that class.</li>
<li>When tabbing, remove the CSS class.</li>
</ol>
<p>The complete code:</p>
<p><strong>CSS</strong></p>
<pre class=" language-css"><code class="language-css"><span class="token number">.</span>no-focus-outline <span class="token property">a</span><span class="token punctuation">:</span>focus,
<span class="token number">.</span>no-focus-outline <span class="token property">button</span><span class="token punctuation">:</span>focus &amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>
  <span class="token property">outline</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>
&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>
</code></pre>
<p><strong>JS</strong></p>
<pre class=" language-js"><code class="language-js"><span class="token comment" spellcheck="true">// Listen to tab events to enable outlines (accessibility improvement)</span>
document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'keyup'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>which <span class="token operator">===</span> <span class="token number">9</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">/* tab */</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>
    document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token string">'no-focus-outline'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>
<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre>
<p>And a video showing what it looks like when tabbing:</p>
<div style="text-align:center">
  <video width="320" height="560" controls src="https://res.cloudinary.com/jmperez/video/upload/v1510495843/css-outline-focus_olx6zh.mp4" />
</div>

<p>Some additional a11y improvements are that I apply the same effect on hover and on focus, like when going through the “More by …” albums section. Last, but not least, the track row acts as a button to start the playback.</p>
<p>These are some small touches that very few people will realise, but are not difficult to implement and can have a very positive impact for some users.</p>
]]></content>
    
    <summary type="html">
    
      A simple technique to hide the outline CSS property while making your website accessible when using keyboard navigation.
    
    </summary>
    
    
      <category term="a11y" scheme="https://jmperezperez.com/tags/a11y/"/>
    
  </entry>
  
</feed>
