<!doctype html><html lang=en><head><meta charset=utf-8><meta content="ie=edge" http-equiv=x-ua-compatible><meta content="DPR, Viewport-Width, Width" http-equiv=Accept-CH><title>Lazy loading Javascript: On-demand scripts to faster load times - José M. Pérez</title><link href=//res.cloudinary.com rel=dns-prefetch /><meta content="How to load JavaScript on-demand using stub functions and progressive enhancements" name=description><meta content="width=device-width,initial-scale=1,viewport-fit=cover" name=viewport><link href=https://plus.google.com/107456024651797783420 rel=author /><link href=https://jmperezperez.com/feed.xml rel=alternate title="Jose M. Perez" type=application/rss+xml><meta content=summary name=twitter:card><meta content=https://jmperezperez.com//ondemand-javascript-lazy-loading-stubs name=twitter:url property=og:url><meta content="Lazy loading Javascript: On-demand scripts to faster load times" name=twitter:title property=og:title><meta content="How to load JavaScript on-demand using stub functions and progressive enhancements" name=twitter:description property=og:description><meta content=@jmperezperez name=twitter:site><meta content=https://res.cloudinary.com/jmperez/image/upload/f_auto,c_scale/v1519156883/profile_ysrm5y.jpg property=og:image><meta content=https://res.cloudinary.com/jmperez/image/upload/f_auto,c_scale/v1519156883/profile_ysrm5y.jpg name=twitter:image><meta content=1702266270006013 property=fb:app_id><meta content=1639848659664211 property=fb:pages /><link href=https://jmperezperez.com//ondemand-javascript-lazy-loading-stubs rel=canonical /><style>*{-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;border:none;font:inherit;margin:0;padding:0;vertical-align:baseline}button,input{background:0 0}html{font-size:18px}@media (max-width:768px){html{font-size:16px}}body{background:#fff;color:#555;font-family:Georgia,Times;font-weight:300;font-style:normal;line-height:1.5rem;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;-webkit-text-size-adjust:100%}h1,h2,h3,h4,h5{color:#212121;font-family:"Helvetica Neue",Helvetica,Arial,sans-serif;font-weight:600;line-height:2rem;margin-bottom:1.5rem}#menu a,.button{font-size:1em;font-weight:400}.post ol,.post ul,amp-video,amp-vimeo,amp-youtube,iframe,p,video{margin:0;margin-bottom:1rem}twitterwidget{margin-bottom:1em!important}a{color:#2a7cb2;font-weight:inherit;text-decoration:none;transition:color .15s ease-out,border-bottom-color .15s ease-out}a:hover{color:#2a7cb2}abbr{border-bottom:1px dashed #ccc;text-decoration:none}p a{border-bottom:1px solid #eee}p a:hover{border-bottom-color:#212121}strong{font-weight:700}em{font-style:italic}h1{font-size:1.7rem}h2{color:#444;display:inline-block;font-size:1.6rem;font-weight:400;margin-top:1rem}h3{color:#666;display:inline-block;font-size:1.4rem;font-weight:400;margin-top:1rem}h4{font-size:1.18rem}h5{font-size:1rem}a h1,a h2,a h3,a h4,a h5{transition:color .15s ease-out}a:hover h1,a:hover h2,a:hover h3,a:hover h4,a:hover h5{color:#3498db}.quote{margin:0 0 15px 0}blockquote{border-left:2px solid #ccc;font-style:italic;margin:0 0 15px 0;padding-left:20px}ol,ul{margin:0 0 15px 0;padding-left:25px}ul{list-style:square}ol{list-style:decimal}hr{background:#eee;color:#eee;clear:both;display:block;height:2px;margin:30px auto;width:50%}code,pre{color:#333;font-family:Courier,Menlo,Monaco;font-size:.8em;letter-spacing:0;overflow-x:auto}pre{padding:.8em 1em;white-space:pre-wrap}code{margin:0}.post::after{display:block;clear:both;content:""}.main-header{background-color:#005689;font-family:"Helvetica Neue",Helvetica,Arial,sans-serif;overflow:hidden;margin-bottom:1.5rem;padding:1rem;position:relative;text-align:center;width:100%}#menu{display:inline-block;line-height:2rem}#menu a{color:#fff;font-size:.9rem;margin-left:1rem;padding:1rem .5rem;text-transform:uppercase}@media (max-width:500px){#menu a{margin-left:.5rem;padding:.5rem .25rem}}#menu a:first-child{margin-left:0}#menu a[aria-current]{font-weight:700}#page{margin:0 auto;max-width:41rem;padding-left:1.5rem;padding-right:1.5rem;position:relative}.videoWrapper{height:0;margin-bottom:1em;padding-bottom:56.25%;padding-top:25px;position:relative}.videoWrapper amp-youtube,.videoWrapper iframe{height:100%;left:0;position:absolute;top:0;width:100%}.wrapper{border-top:2px solid #eee;padding-top:2rem}.wrapper:first-child{border-top:none;padding-top:1rem}.posts-list h2{margin-top:0}.post{display:block;margin-bottom:2rem;width:100%}.post div[itemprop=articleBody]>p:first-child{color:#333}.post li{margin-bottom:.5rem}.post p+img{margin-bottom:1rem}.post p img{border:1px solid #eee;display:block;max-width:100%}.post img+.caption,.post img+figcaption{padding-top:.5rem}.post .svg-container{margin-bottom:5%;max-width:100%;text-align:center}figure{padding-bottom:1em}video{height:auto;max-width:100%}.post .svg-container object{width:100%}.tag-list{display:inline-block;list-style-type:none;margin:0;padding:0;padding-bottom:1rem}.tag-list-item{display:inline-block;margin-left:.8em}.pagination{padding-bottom:1rem;text-align:center}.pagination a{min-width:30px;max-height:30px;text-align:center}footer{border-top:1px dashed #ddd;padding:2em;text-align:center}.timing-stats{font-size:.7em;padding:.35em}.button{background-color:#fff;border:1px solid #555;border-radius:2rem;color:#555;display:inline-block;padding:.5rem 1rem;transition:background-color .15s ease-out}.button:hover{background-color:#3498db;border-color:transparent;color:#fff}.button.inactive{background-color:#ccc;color:#fff}.search-goog input{border:2px solid #ddd;padding:10px}.search-goog input[type=submit]{background-color:#ddd;cursor:pointer}@media (max-width:768px){#page,.wrapper{margin:0;max-width:100%;width:100%}.wrapper{padding-top:2rem}.wraper::after{clear:both;content:"";display:block}}.outscreen{height:1px;left:-1000px;overflow:hidden;position:absolute;top:auto;width:1px}.callout{border:1px solid #eee;border-left-color:#777;border-left-width:5px;border-radius:3px;font-size:.9rem;padding:20px;margin:20px 0}.author{font-family:"Helvetica Neue",Helvetica,Arial,sans-serif;font-size:.8rem;margin-bottom:1rem}.author .name{line-height:1rem;padding-top:.5rem}.bd,.media{overflow:hidden;zoom:1}.media .img{float:left}.avatar-img{border-radius:100%;height:3rem;margin-right:.5rem;width:3rem}code[class*=language-],pre[class*=language-]{color:#393a34;font-family:Consolas,"Bitstream Vera Sans Mono","Courier New",Courier,monospace;direction:ltr;text-align:left;white-space:pre-wrap;word-spacing:normal;word-break:normal;font-size:.85em;line-height:1.2em;-moz-tab-size:4;-o-tab-size:4;tab-size:4;-webkit-hyphens:none;-moz-hyphens:none;-ms-hyphens:none;hyphens:none}code[class*=language-] ::-moz-selection,code[class*=language-]::-moz-selection,pre[class*=language-] ::-moz-selection,pre[class*=language-]::-moz-selection{background:#b3d4fc}code[class*=language-] ::selection,code[class*=language-]::selection,pre[class*=language-] ::selection,pre[class*=language-]::selection{background:#b3d4fc}pre[class*=language-]{padding:1em;margin:.5em 0;overflow:auto;border:1px solid #ddd;background-color:#fff}:not(pre)>code[class*=language-]{padding:.2em;padding-top:1px;padding-bottom:1px;background:#f8f8f8;border:1px solid #ddd}.token.cdata,.token.comment,.token.doctype,.token.prolog{color:#998;font-style:italic}.token.namespace{opacity:.7}.token.attr-value,.token.string{color:#e3116c}.token.operator,.token.punctuation{color:#393a34}.token.boolean,.token.constant,.token.entity,.token.inserted,.token.number,.token.property,.token.regex,.token.symbol,.token.url,.token.variable{color:#005cc5}.token.keyword{color:#d73a49}.token.atrule,.token.attr-name{color:#6f42c1}.token.deleted,.token.function{color:#6f42c1}.token.selector{color:#00009f}.token.tag{color:#22863a}.token.class-name{color:#6f42c1}.token.bold,.token.important{font-weight:700}.token.italic{font-style:italic}.caption,figcaption{display:block;font-size:.8rem;text-align:center}.codepen-aspect-ratio>iframe{height:100%;position:absolute;width:100%}.twitter-tweet{margin-left:auto;margin-right:auto}.twitter-tweet::after{content:"";display:block;padding-bottom:20px;width:100%}.me{max-width:22rem;margin:0 auto 1rem;text-align:center}.me>div{height:8rem;margin:0 auto;position:relative;width:8rem}.me svg{border-radius:100%;height:100%;left:0;position:absolute;top:0;width:100%}.me img{border-radius:100%;height:100%;position:relative;width:100%}.me h1{font-size:1.7rem;line-height:2rem;margin-bottom:.5rem}.read-next{background-color:#fdf6ea;margin:2rem 0;padding:1em}@media (prefers-color-scheme:dark){body{background:#38444c;color:#eee}a{color:#9dcae8}a:hover{color:#fff}p a{border-bottom:1px solid #6d7a82}p a:hover{border-bottom:1px solid #fff}h1,h2,h3,h4,h5{color:#eee}a:hover h1,a:hover h2,a:hover h3,a:hover h4,a:hover h5{color:#4b89b1}.button:hover{background-color:#4b89b1}code,pre{color:#ddd}.main-header{background-color:#4b89b1}.read-next{background-color:#020915}}.amp-img-wrapper{position:absolute;height:100%;width:100%}</style><link href=/ondemand-javascript-lazy-loading-stubsamp/ rel=amphtml><link href=https://webmention.io/jmperezperez.com/webmention rel=webmention /><link href=https://webmention.io/jmperezperez.com/xmlrpc rel=pingback /><meta content=#005689 name=theme-color><link href=/manifest.json rel=manifest><meta content="Hexo 5.4.0" name=generator></head><body><header class=main-header><nav id=menu><a href=/ >Blog</a> <a href=/projects/ >Projects</a> <a href=/talks/ >Speaking</a> <a href=/about-me/ >About</a></nav></header><div id=page><article class=wrapper><div class=post><header><script type=application/ld+json>{
  "@context": "http://schema.org",
  "@type": "BlogPosting",
  "headline": "Lazy loading Javascript: On-demand scripts to faster load times",
  
  "description": "How to load JavaScript on-demand using stub functions and progressive enhancements",
  
  "mainEntityOfPage":{
      "@type":"WebPage",
      "@id":"https://jmperezperez.com//ondemand-javascript-lazy-loading-stubs"
  },
  "datePublished": "2010-11-13T15:14:34.000Z",
  "dateModified": "2018-12-16T17:51:46.000Z",
  
  "author": {
      "@type": "Person",
      "name": "Jose M. Perez",
      "url": "https://jmperezperez.com",
      "sameAs": [
        "http://www.linkedin.com/in/jmperezperez",
        "https://twitter.com/jmperezperez"
      ]
  },
  "publisher": {
      "@type": "Organization",
      "name": "Jose M. Perez's Blog"
      
      ,
      "logo": {
        "@type": "ImageObject",
        "url": "https://jmperezperez.com/assets/images/logo.png",
        "width": 600,
        "height": 60
      }
      
  }
}</script><div class="media author"><div class=img><a href="/about-me/?ref=post-header"><img alt="" class=avatar-img height=53 sizes=53px src=https://res.cloudinary.com/jmperez/image/upload/w_120,f_auto,c_scale/v1519156883/profile_ysrm5y.jpg width=53></a></div><div class=bd><address class=name itemprop=author itemscope itemtype=https://schema.org/Person><a href=/about-me/ itemprop=name>José M. Pérez</a></address><meta content=2010-11-13T15:14:34.000Z class=post-data itemprop=datePublished>November 13, 2010<span style="margin:0 .5rem;display:inline-block">|</span> Reading Time: ~<time>3 mins</time></div></div><h1>Lazy loading Javascript: On-demand scripts to faster load times</h1></header><p>Loading on-demand code can boost website performance in the sense that the browser does not need to request and execute Javascript code that is not needed. Depending on the script, a different approach can be taken to lazy load it.</p><span id=more></span><h2 id=Progressive-enhancement-Javascript><a href=#Progressive-enhancement-Javascript class=headerlink title="Progressive enhancement Javascript"></a>Progressive enhancement Javascript</h2><p>This is by far the best scenario. Javascript is used to improve user experience but the web page can work without Javascript (in example, browsers with Javascript disabled). In this case, script loading can be delayed to the very moment it is needed or it can be loaded after some timeout.</p><p>An example would be a form used to post a comment. This form could be ajaxify using a script that is requested when the textarea is focused. This way, this script would just be downloaded when potentially needed. Another example would be an input search that is improved using autocompletion once it is focused.</p><h2 id=Using-mocks-stubs-for-Javascript-only-functionality><a href=#Using-mocks-stubs-for-Javascript-only-functionality class=headerlink title="Using mocks/stubs for Javascript-only functionality"></a>Using mocks/stubs for Javascript-only functionality</h2><p>Some times Javascript is used to allow functionality that cannot implemented other way. In this case, a mockup approach can be taken.</p><p>Mockup Javascript only defines the signatures of the functions and as little functionality as possible. We can use mocks to load the “real” Javascript and avoid calls to non-declared functions. This is similar to how <a href=http://www.stevesouders.com/blog/2009/09/08/doloto-javascript-download-optimizer/ rel=noopener target=_blank>Microsoft Doloto</a> works. Stub functions can make as little as just preventing undefined symbols, or as much as loading real script and re-execute the javascript call so that the real script (that has just overridden the stub function) executes. Steve Souders explains this technique in his <a href="http://books.google.es/books?id=E7p-07kNfXYC&lpg=PA24&ots=ULjpQKecMk&dq=souders%20doloto&pg=PA24#v=onepage&q&f=false" rel=noopener target=_blank><em>Even faster web sites</em> book</a>.</p><p>We would have one file to functions declarations (mockup) and another file that will override mockup:</p><p><strong>functions_mock.js</strong></p><pre class=language-js><code class=language-js><span class="token keyword">function</span> <span class="token function">loadJs</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> cb<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> script <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">'script'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  script<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">'src'</span><span class="token punctuation">,</span> url<span class="token punctuation">)</span><span class="token punctuation">;</span>
  script<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">'type'</span><span class="token punctuation">,</span> <span class="token string">'text/javascript'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">var</span> loaded <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> loadFunction <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>loaded<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>
    loaded <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    cb <span class="token operator">&amp;</span>amp<span class="token punctuation">;</span> <span class="token function">cb</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">;</span>
  script<span class="token punctuation">.</span>onload <span class="token operator">=</span> loadFunction<span class="token punctuation">;</span>
  script<span class="token punctuation">.</span>onreadystatechange <span class="token operator">=</span> loadFunction<span class="token punctuation">;</span>
  document<span class="token punctuation">.</span><span class="token function">getElementsByTagName</span><span class="token punctuation">(</span><span class="token string">"head"</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>script<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">factorial</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>
  <span class="token function">loadJs</span><span class="token punctuation">(</span><span class="token string">'functions.js'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>
    <span class="token function">factorial</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>
</code></pre><p><strong>functions.js</strong></p><pre class=language-js><code class=language-js><span class="token keyword">function</span> <span class="token function">factorial</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>n<span class="token operator">></span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">return</span> n<span class="token operator">*</span><span class="token function">factorial</span><span class="token punctuation">(</span>n<span class="token number">-1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>
</code></pre><p><strong>index.html</strong></p><pre class=language-html><code class=language-html><span class="token doctype">&lt;!doctype html></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>functions_mock.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>alert(factorial(10));<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Factorial!<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span>
</code></pre><p>Maybe the <code>factorial</code> function is not the best one. In fact, the size of mock file is greater than the “real” JavaScript file, but the idea is that mock file would replace large functions, achieving smaller files and faster execution times, especially if we use stubs to only prevent undefined symbols and load real scripts after some delay.</p><p>In the case of stub loading real script we should take into account that some functions may need synchronous downloading of real script file. This is the case of functions that return a value that is used later. In our example, if we change the button call function to something like:</p><pre class=language-html><code class=language-html><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>var f <span class="token punctuation">=</span> factorial(10); alert(f);<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Factorial!<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>
</code></pre><p>we will get an undefined value because factorial stub function returns before calling real function. This can be solved by loading functions.js in a blocking way, though this can affect user experience.</p><p>In conclusion, we should consider what is the best way to defer JavaScript execution (and if it is worth). Personally I think that it can be useful in the case of large JavaScript files with few global variables that we can manage properly.</p></div><hr/>Tags:<ul class=tag-list itemprop=keywords><li class=tag-list-item><a href=/tags/javascript/ rel=tag class=tag-list-link>javascript</a></li><li class=tag-list-item><a href=/tags/lazy-loading/ rel=tag class=tag-list-link>lazy loading</a></li><li class=tag-list-item><a href=/tags/performance/ rel=tag class=tag-list-link>performance</a></li><li class=tag-list-item><a href=/tags/stub/ rel=tag class=tag-list-link>stub</a></li></ul></article></div><script>"serviceWorker"in navigator&&window.addEventListener("load",function(){navigator.serviceWorker.register("/sw.js").then(function(n){}).catch(function(n){})})</script><footer><section class=links><a href=https://twitter.com/jmperezperez rel="me noopener" target=_blank>@jmperezperez</a> on Twitter · <a href=https://github.com/JMPerez rel="me noopener" target=_blank>GitHub</a> · <a href=https://www.linkedin.com/in/jmperezperez rel=noopener target=_blank>LinkedIn</a> · <a href=https://medium.com/@jmperezperez rel=noopener target=_blank>Medium</a></section><div class=timing-stats></div></footer><script>window.addEventListener("load",()=>{setTimeout(()=>{var e,r,t=window.performance&&performance.timing;function i(e){return Math.round(100*e)/100}t&&(e=document.querySelector(".timing-stats"),r="This page loaded in "+i((t.loadEventEnd-t.navigationStart)/1e3)+" seconds. ",performance.getEntriesByType("paint").forEach(function(e,t,n){var a=e.name;"first-paint"===a?a="<abbr title="+a+">FP</abbr>":"first-contentful-paint"===a&&(a="<abbr title="+a+">FCP</abbr>"),r+=a+" was "+i(e.startTime/1e3)+" seconds. "}),r+='<a href="https://jmperezperez.com/page-load-footer/">More info</a>.',e.innerHTML=r)},0)})</script><script async src=/quicklink.js></script><script async src=https://unpkg.com/turbolinks@5.2.0/dist/turbolinks.js data-turbolinks-suppress-warning></script></body></html>