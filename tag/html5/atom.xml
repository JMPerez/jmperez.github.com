<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Jose M. Perez&#39;s Blog</title>
  <subtitle>Web development, performance, and some other good practices.</subtitle>
  <link href="/tag/html5/atom.xml" rel="self"/>
  
  <link href="https://jmperezperez.com/"/>
  <updated>2018-12-16T17:51:46.000Z</updated>
  <id>https://jmperezperez.com/</id>
  
  <author>
    <name>Jose M. Perez</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Facebook for iOS: From HTML5 to native</title>
    <link href="https://jmperezperez.com//facebook-ios-html5-native"/>
    <id>https://jmperezperez.com//facebook-ios-html5-native</id>
    <published>2012-08-26T08:07:43.000Z</published>
    <updated>2018-12-16T17:51:46.000Z</updated>
    
    <content type="html"><![CDATA[<p>This week Facebook <a href="http://web.archive.org/web/20121019162440/http://newsroom.fb.com/News/A-Faster-Facebook-for-iOS-1b4.aspx">announced an update for their iOS app</a> whose main change is a faster overall experience. Going deeper into technical details, we have “<a href="https://www.facebook.com/notes/facebook-engineering/under-the-hood-rebuilding-facebook-for-ios/10151036091753920">Under the hood: Rebuilding Facebook for iOS</a>“, a nice post explaining what changes have been done.</p>
<span id="more"></span>
<h2 id="Lessons-learned-from-HTML5"><a href="#Lessons-learned-from-HTML5" class="headerlink" title="Lessons learned from HTML5"></a>Lessons learned from HTML5</h2><p>I really recommend reading “<a href="http://readwrite.com/2011/12/27/redux_how_facebook_mobile_was_designed_to_write_once_run/">How Facebook Mobile Was Designed to Write Once, Run Everywhere</a>“ since it provides a better understanding about how Facebook mobile development has evolved. They found HTML5 to be the answer to share code between their mobile site and iOS app, developed as a hybrid app. After their experience on iOS, they decided to do the same with their Android app:</p>
<blockquote>
<p>But, this worked well enough that we said we are going to put the Android app on this party train too. So, we were actually able to write something like the m.site news feed once. Any time you change a news feed story or add a news feed story or add commenting and Liking or whatever, that is going to show up on low-end m.site, high-end m.site, Facebook for iPhone and Facebook for Android the very next day, or whenever we push, which is actually pretty awesome. - Dan Rowinski</p>
</blockquote>
<p>This also worked for their iPad app, which was basically the iPhone app with a chat column on landscape mode. Relying on apps that were the glue between the hardware and a webview, made it possible to release minor changes often without the need of releasing a whole app update. So, even though now they have moved to a more native app, they still have provided ways to perform small changes transparently:</p>
<blockquote>
<p>[…] news feed is constantly evolving, and building more in Objective-C creates new challenges when we add in new features. To solve this, we came up with a different plan to let you use the newest features without requiring you to update the entire app: a “fallback” renderer. - <a href="https://www.facebook.com/notes/facebook-engineering/under-the-hood-rebuilding-facebook-for-ios/10151036091753920">Jonathan Dann</a></p>
</blockquote>
<p>and they will still be using HTML5 in certain parts:</p>
<blockquote>
<p>For areas within the app where we anticipate making changes more often, we will continue to utilize HTML5 code, as we can push updates server side without requiring people to download a new version of the app. - <a href="https://www.facebook.com/notes/facebook-engineering/under-the-hood-rebuilding-facebook-for-ios/10151036091753920">Jonathan Dann</a></p>
</blockquote>
<p>In fact Facebook has always defended HTML5 in order to circumvent application stores approval processes and offer a more unified experience across devices, with projects such as <a href="http://techcrunch.com/2011/06/15/facebook-project-spartan/">Spartan</a>, and pushing to create a benchmark showing mobile browsers capabilities with <a href="https://developers.facebook.com/blog/post/2012/02/27/announcing-ringmark--a-mobile-browser-test-suite/">Ringmark</a>.</p>
<h2 id="Rewriting-the-app-from-HTML5-to-native-code"><a href="#Rewriting-the-app-from-HTML5-to-native-code" class="headerlink" title="Rewriting the app from HTML5 to native code"></a>Rewriting the app from HTML5 to native code</h2><p>Facebook’s decision is similar to the one <a href="/developing-mobile-webapp-first/">using web technologies</a> in those stages where changes are frequent is a nice idea. Once they knew how they wanted their app to look like and were confident enough, they moved to native, to offer a better user experience to user’s of a certain platform. Thus, HTML5 version is still available for many other platforms, both as a website and as hybrid apps (for instance, iOS lower than 4.3) and is doing the job well.</p>
<p>A hybrid app can’t offer the same performance as a native app. This is a matter of taking into consideration the pros and cons in terms of code reuse and best experience in every platform. Web implementations run on top of an additional layer, so native code is more likely to have a better performance to achieve the same result. That is why projects such as <a href="/boot-to-gecko-html5/">Boot to Gecko</a> pretend to set an environment that exposes access to native hardware using Javascript.</p>
<p>There is an ongoing discussion about a deliberately decision from Apple and Google on <a href="https://web.archive.org/web/20150516201644/http://branch.com/b/a-blow-to-html5">not making more efforts on improving Javascript performance on hybrid apps</a>. Though it could make sense, I’d rather think this is not the case.</p>
]]></content>
    
    <summary type="html">
    
      Facebook has rewritten their iOS app from HTML5 to native code to provide a faster user experience. Having actively promoted HTML5 development, this shows hybrid apps performance is still not good enough, but some ideas can be taken from this decision.
    
    </summary>
    
    
      <category term="html5" scheme="https://jmperezperez.com/tags/html5/"/>
    
      <category term="facebook" scheme="https://jmperezperez.com/tags/facebook/"/>
    
      <category term="hybrid apps" scheme="https://jmperezperez.com/tags/hybrid-apps/"/>
    
  </entry>
  
  <entry>
    <title>HTML5 in Boot to Gecko</title>
    <link href="https://jmperezperez.com//boot-to-gecko-html5"/>
    <id>https://jmperezperez.com//boot-to-gecko-html5</id>
    <published>2012-03-04T15:14:43.000Z</published>
    <updated>2018-12-16T17:51:46.000Z</updated>
    
    <content type="html"><![CDATA[<p>I have just read <a href="http://christianheilmann.com/2012/03/04/mobile-world-congress-boot-to-gecko-and-the-unknown-beast-called-html5/">Christian Heilmann’s post about Boot to Gecko</a> and I am very excited to see how HTML5 + JS + CSS3 stack can ever power a mobile phone user interface.</p>
<p>These are good times for web development. It is moving from client side web development, to server side, then to mobile apps, and now as the top layer used to run all the applications of a typical phone. We need browsers and OS makers to push forward these technologies, implementing better Javascript engines, and making reality the latest HTML5 APIs.</p>
<span id="more"></span>
<p>Thanks to the rapidly release cycles that we are seeing in desktop browsers, developers can take advantage of the most recent tools to implement better websites. But mobile web development is still a step behind, and we need browsers that can easily be updated without needing to make a whole OS update, and these browsers should strive for bringing to mobile devices features like access to its hardware (see <a href="http://johnhammink.blogspot.com/2011/11/lets-have-look-at-some-recently-landed.html">Device API</a>) and better usage of the hardware on which they are running.</p>
<p>Why Windows Phone doesn’t support file upload? Why PS Vita doesn’t support audio, video, WebGL or localStorage? From a developer’s point of view it is a pity that we can’t use a web stack for granted, having to deal meanwhile with polyfills. This makes it slower to embrace new features, and makes the large mobile devices eco-system even more complex.</p>
<p>I really welcome initiatives like <a href="http://www.mozilla.org/b2g">Boot to Gecko</a>, that show off how incredibly powerful the web can be, and make web development a first citizen on mobile environment.</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;I have just read &lt;a href=&quot;http://christianheilmann.com/2012/03/04/mobile-world-congress-boot-to-gecko-and-the-unknown-beast-called-html5/&quot;&gt;Christian Heilmann’s post about Boot to Gecko&lt;/a&gt; and I am very excited to see how HTML5 + JS + CSS3 stack can ever power a mobile phone user interface.&lt;/p&gt;
&lt;p&gt;These are good times for web development. It is moving from client side web development, to server side, then to mobile apps, and now as the top layer used to run all the applications of a typical phone. We need browsers and OS makers to push forward these technologies, implementing better Javascript engines, and making reality the latest HTML5 APIs.&lt;/p&gt;
    
    </summary>
    
    
      <category term="html5" scheme="https://jmperezperez.com/tags/html5/"/>
    
      <category term="b2g" scheme="https://jmperezperez.com/tags/b2g/"/>
    
      <category term="boot to gecko" scheme="https://jmperezperez.com/tags/boot-to-gecko/"/>
    
  </entry>
  
  <entry>
    <title>Google Maps Geolocation and Directions to a Specific Destination</title>
    <link href="https://jmperezperez.com//google-maps-geolocation-directions-specific-destination"/>
    <id>https://jmperezperez.com//google-maps-geolocation-directions-specific-destination</id>
    <published>2010-07-16T16:50:57.000Z</published>
    <updated>2018-12-16T17:51:46.000Z</updated>
    
    <content type="html"><![CDATA[<p>While helping in the redesign of Signum’s website I took a look at Google Maps. It’s been almost 2 years since I last used the API for my end career project.</p>
<p>Now I wanted to know if I could make use of geolocalization and directions to show a visitor the way to get to our headquarters from wherever he/she is, instead of just showing with a marker where we are. Thanks to geolocation we can find out with precision the position coordinates of the visitor.
<a href="/assets/images/posts/google-maps-geolocation-directions.jpg"><img src="/assets/images/posts/google-maps-geolocation-directions-300x187.jpg" alt="Geolocation to guide visitor&#39;s to a specific place"></a>
<a href="/demos/geoposition">View demo</a></p>
<span id="more"></span>
<p>The code makes use of HTML5 and Google geolocation services, as well as the new Google Maps API v3.</p>
<p>Some time ago I would have done this (in fact in the project I did this way) querying an IP address to Location database to get the position, having to update data almost every month, as IP addresses were reassigned.</p>
<p>Now you can get it done by using HTML5 geolocation feature primarily an then use an alternative service as a fallback in case the browser does not support HTML5 or it throws an error when getting the location.</p>
<p>Here is the JS code (also as <a href="https://gist.github.com/4587682">a Gist on Github</a>). To see a complete working sample <a href="/demos/geoposition">visit the demo</a>:</p>
<pre class=" language-js"><code class="language-js"><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>
  <span class="token string">'use strict'</span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> map<span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//the google map</span>
  directionsService<span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//service that provides directions to reach our destination</span>
  directionsDisplay<span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//renderer that draws directions on map</span>
  destinationName <span class="token operator">=</span> <span class="token string">'Ventorro del Cano, Madrid'</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//our destination. Set yours!</span>

  <span class="token comment" spellcheck="true">// providers</span>
  <span class="token keyword">var</span> html5Provider <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>
      <span class="token string">'type'</span><span class="token punctuation">:</span> <span class="token string">'HTML5'</span><span class="token punctuation">,</span>
      <span class="token string">'getPosition'</span><span class="token punctuation">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span>onSuccess<span class="token punctuation">,</span> onError<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>navigator<span class="token punctuation">.</span>geolocation<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>
          navigator<span class="token punctuation">.</span>geolocation<span class="token punctuation">.</span><span class="token function">getCurrentPosition</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>position<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>
            <span class="token function">onSuccess</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>
              <span class="token string">'lat'</span><span class="token punctuation">:</span> position<span class="token punctuation">.</span>coords<span class="token punctuation">.</span>latitude<span class="token punctuation">,</span>
              <span class="token string">'lng'</span><span class="token punctuation">:</span> position<span class="token punctuation">.</span>coords<span class="token punctuation">.</span>longitude
            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>
            <span class="token keyword">switch</span> <span class="token punctuation">(</span>error<span class="token punctuation">.</span>code<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>
              <span class="token keyword">case</span> error<span class="token punctuation">.</span>TIMEOUT<span class="token punctuation">:</span>
                <span class="token function">onError</span><span class="token punctuation">(</span><span class="token string">'Timeout'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
              <span class="token keyword">case</span> error<span class="token punctuation">.</span>POSITION_UNAVAILABLE<span class="token punctuation">:</span>
                <span class="token function">onError</span><span class="token punctuation">(</span><span class="token string">'Position unavailable'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
              <span class="token keyword">case</span> error<span class="token punctuation">.</span>PERMISSION_DENIED<span class="token punctuation">:</span>
                <span class="token function">onError</span><span class="token punctuation">(</span><span class="token string">'Permission denied'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
              <span class="token keyword">case</span> error<span class="token punctuation">.</span>UNKNOWN_ERROR<span class="token punctuation">:</span>
                <span class="token function">onError</span><span class="token punctuation">(</span><span class="token string">'Unknown error'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>
          <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> <span class="token keyword">else</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>
          <span class="token function">onError</span><span class="token punctuation">(</span><span class="token string">'HTML5 navigator is not supported'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>
      <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>
    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">;</span>
  <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">;</span>

  <span class="token comment" spellcheck="true">// have a look at this StackOverflow thread, since it seems Google Geocoder is no longer active</span>
  <span class="token comment" spellcheck="true">// http://stackoverflow.com/questions/14195837/is-google-loader-clientlocation-still-supported</span>
  <span class="token keyword">var</span> googleGeocoderProvider <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>
      <span class="token string">'type'</span><span class="token punctuation">:</span> <span class="token string">'Google Geocoder'</span><span class="token punctuation">,</span>
      <span class="token string">'getPosition'</span><span class="token punctuation">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span>onSuccess<span class="token punctuation">,</span> onError<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> google <span class="token operator">===</span> <span class="token string">'object'</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>
          <span class="token keyword">var</span> location <span class="token operator">=</span> google<span class="token punctuation">.</span>loader<span class="token punctuation">.</span>ClientLocation<span class="token punctuation">;</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span>location<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>
            <span class="token function">onSuccess</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>
              <span class="token string">'lat'</span><span class="token punctuation">:</span> location<span class="token punctuation">.</span>latitude<span class="token punctuation">,</span>
              <span class="token string">'lng'</span><span class="token punctuation">:</span> location<span class="token punctuation">.</span>longitude
            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> <span class="token keyword">else</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>
            <span class="token function">onError</span><span class="token punctuation">(</span><span class="token string">'Google Geocoder was unable to get the client position'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>
        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>
      <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>
    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">;</span>
  <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">;</span>

  <span class="token comment" spellcheck="true">// register providers</span>
  <span class="token keyword">var</span> providers <span class="token operator">=</span> <span class="token punctuation">[</span>html5Provider<span class="token punctuation">,</span> googleGeocoderProvider<span class="token punctuation">]</span><span class="token punctuation">;</span>

  <span class="token keyword">function</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

    <span class="token keyword">function</span> <span class="token function">testProvider</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>
      <span class="token keyword">var</span> provider <span class="token operator">=</span> providers<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      provider<span class="token punctuation">.</span><span class="token function">getPosition</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>position<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>
        <span class="token function">showMapAndRoute</span><span class="token punctuation">(</span>provider<span class="token punctuation">.</span>type<span class="token punctuation">,</span> position<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>
        console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>
        i<span class="token operator">++</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">&amp;</span>lt<span class="token punctuation">;</span> providers<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>
          <span class="token function">testProvider</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>
      <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>

    <span class="token function">testProvider</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>

  <span class="token keyword">function</span> <span class="token function">showMapAndRoute</span><span class="token punctuation">(</span>method<span class="token punctuation">,</span> coordinates<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>
    document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'method'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token string">'Location obtained using '</span> <span class="token operator">+</span> method<span class="token punctuation">;</span>

    <span class="token keyword">var</span> myOptions <span class="token operator">=</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>
      zoom<span class="token punctuation">:</span> <span class="token number">8</span><span class="token punctuation">,</span>
      mapTypeId<span class="token punctuation">:</span> google<span class="token punctuation">.</span>maps<span class="token punctuation">.</span>MapTypeId<span class="token punctuation">.</span>ROADMAP
    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">;</span>

    map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">google<span class="token punctuation">.</span>maps<span class="token punctuation">.</span>Map</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'map'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> myOptions<span class="token punctuation">)</span><span class="token punctuation">;</span>
    directionsDisplay <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">google<span class="token punctuation">.</span>maps<span class="token punctuation">.</span>DirectionsRenderer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    directionsDisplay<span class="token punctuation">.</span><span class="token function">setMap</span><span class="token punctuation">(</span>map<span class="token punctuation">)</span><span class="token punctuation">;</span>
    directionsDisplay<span class="token punctuation">.</span><span class="token function">setPanel</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'route'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">var</span> request <span class="token operator">=</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>
      origin<span class="token punctuation">:</span> coordinates<span class="token punctuation">.</span>lat <span class="token operator">+</span> <span class="token string">','</span> <span class="token operator">+</span> coordinates<span class="token punctuation">.</span>lng<span class="token punctuation">,</span>
      destination<span class="token punctuation">:</span> destinationName<span class="token punctuation">,</span>
      travelMode<span class="token punctuation">:</span> google<span class="token punctuation">.</span>maps<span class="token punctuation">.</span>DirectionsTravelMode<span class="token punctuation">.</span>DRIVING
    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">;</span>
    directionsService <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">google<span class="token punctuation">.</span>maps<span class="token punctuation">.</span>DirectionsService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    directionsService<span class="token punctuation">.</span><span class="token function">route</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span>result<span class="token punctuation">,</span> status<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>status <span class="token operator">===</span> google<span class="token punctuation">.</span>maps<span class="token punctuation">.</span>DirectionsStatus<span class="token punctuation">.</span>OK<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>
        directionsDisplay<span class="token punctuation">.</span><span class="token function">setDirections</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>
    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>

  window<span class="token punctuation">.</span>onload <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>
    <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">;</span>
<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre>
<p>The code is mostly self-explanatory. We need to show the map, obtain the visitor’s position, ask for the directions and render them over the map. You can easily add more geolocation providers, and run them by priority changing they order in the providers array.</p>
<p>In my tests I have seen that I get <em>null</em> when checking <code>google.loader.ClientLocation</code>. It means that Google couldn’t retrieve a position to the IP that it has detected, so in this case the fallback can fail some times (maybe we should use a second fallback?).</p>
]]></content>
    
    <summary type="html">
    
      Have you ever wondered how to show a google map showing instructions on how to get to your business? You can do it easily detecting your visitor&#39;s position and then provide directions to get to a specific destination.
    
    </summary>
    
    
      <category term="html5" scheme="https://jmperezperez.com/tags/html5/"/>
    
      <category term="geolocation" scheme="https://jmperezperez.com/tags/geolocation/"/>
    
      <category term="maps" scheme="https://jmperezperez.com/tags/maps/"/>
    
  </entry>
  
  <entry>
    <title>Using HTML5 features today</title>
    <link href="https://jmperezperez.com//progressively-using-html5-features"/>
    <id>https://jmperezperez.com//progressively-using-html5-features</id>
    <published>2010-07-02T09:17:27.000Z</published>
    <updated>2018-12-16T17:51:46.000Z</updated>
    
    <content type="html"><![CDATA[<p>I have already started to use different HTML5 features to progressive
enhance web applications developed in my current job. HTML5 has a good
thing: users with modern browsers can enjoy enhancements without harming
those who use older ones. This allows you integrate new features
provided by HTML5 and don’t worry about incompatibilities.</p>
<span id="more"></span>
<p>So far we are using:</p>
<ul>
<li><strong>New input types</strong>: though currently our customers use desktop
  browsers above all, these new input types degrade gracefully to
  typical input texts while showing a custom keyboard when you focus
  them using a mobile browser (ie: mobile safari). Thus, specific
  keyboard optimized to numerical, email address or url inputs
  provides a better experience if supported by the browser.</li>
<li><strong>Placeholder</strong> attribute: Placeholder provides a straightforward
  way to show a hint to inform the users about the content the have to
  provide inside an input element (for instance you can place the
  label text or a date format). This is nicely supported in webkit
  browsers and can be easily implemented using javascript as a
  fallback.</li>
<li><strong>LocalStorage</strong> vs cookies: LocalStorage is great to store current
  user browsing preferences like expanded/collapsed menus or selected
  tabs. It is much better than using cookies if you do not need to
  read their content in your server. This reduces data traffic in
  every request for resources residing in the same domain you set he
  cookie. A nice example is <a href="http://jqueryui.com/demos/tabs/#cookie">the jQuery UI tabs plugin</a>, which has
  an option to remember the selected tab using a cookie. This cookie
  would have to contain every selected tab in each of your pages.
  Another example is <a href="https://github.com/jzaefferer/jquery-treeview/blob/master/jquery.treeview.js#L191">the persistence approach that TreeView plugin
  takes</a>,
  also based on cookies. Why don’t just use localStorage to
  keep that information? In addition, taking into account graceful
  degradation, cookies approximation can be used if localStorage is
  not supported by the browser (although even IE8 supports it
  currently).</li>
</ul>
<p>HTML5 provides a bunch of other features you should be taking into
account in your projects. Maybe you don’t find them useful at all, but
they can be the solution to problems you may encounter. Until IE9 starts
to take off and replaces IE8 (and especially, please, IE6 and IE7) we
will have to adopt HTML5 features progressively, trying to offer an
alternative implementation to those older browsers.</p>
]]></content>
    
    <summary type="html">
    
      You can already use different HTML5 to improve your websites. These are some that I have already started to use in several web applications, offering an equivalent functionality in older browsers.
    
    </summary>
    
    
      <category term="cookies" scheme="https://jmperezperez.com/tags/cookies/"/>
    
      <category term="html5" scheme="https://jmperezperez.com/tags/html5/"/>
    
      <category term="localstorage" scheme="https://jmperezperez.com/tags/localstorage/"/>
    
      <category term="progressive enhancement" scheme="https://jmperezperez.com/tags/progressive-enhancement/"/>
    
  </entry>
  
</feed>
