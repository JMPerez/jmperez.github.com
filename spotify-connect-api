<!doctype html><html lang=en><head><meta charset=utf-8><meta content="ie=edge" http-equiv=x-ua-compatible><meta content="DPR, Viewport-Width, Width" http-equiv=Accept-CH><title>Playing with the Spotify Connect API - José M. Pérez</title><link href=//res.cloudinary.com rel=dns-prefetch /><meta content="The new Web API endpoints let you show what is playing in your Spotify account. It is easy to create views that update in real time." name=description><meta content="width=device-width,initial-scale=1,viewport-fit=cover" name=viewport><link href=https://plus.google.com/107456024651797783420 rel=author /><link href=https://jmperezperez.com/feed.xml rel=alternate title="Jose M. Perez" type=application/rss+xml><meta content=summary_large_image name=twitter:card><meta content=https://jmperezperez.com//spotify-connect-api name=twitter:url property=og:url><meta content="Playing with the Spotify Connect API" name=twitter:title property=og:title><meta content="The new Web API endpoints let you show what is playing in your Spotify account. It is easy to create views that update in real time." name=twitter:description property=og:description><meta content=@jmperezperez name=twitter:site><meta content=https://jmperezperez.com/assets/images/posts/spotify-connect-api-visualisation-artist.jpg property=og:image><meta content=https://jmperezperez.com/assets/images/posts/spotify-connect-api-visualisation-artist.jpg name=twitter:image><meta content=1702266270006013 property=fb:app_id><meta content=1639848659664211 property=fb:pages /><link href=https://jmperezperez.com//spotify-connect-api rel=canonical /><style>*{-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;border:none;font:inherit;margin:0;padding:0;vertical-align:baseline}button,input{background:0 0}html{font-size:18px}@media (max-width:768px){html{font-size:16px}}body{background:#fff;color:#555;font-family:Georgia,Times;font-weight:300;font-style:normal;line-height:1.5rem;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;-webkit-text-size-adjust:100%}h1,h2,h3,h4,h5{color:#212121;font-family:"Helvetica Neue",Helvetica,Arial,sans-serif;font-weight:600;line-height:2rem;margin-bottom:1.5rem}#menu a,.button{font-size:1em;font-weight:400}.post ol,.post ul,amp-video,amp-vimeo,amp-youtube,iframe,p,video{margin:0;margin-bottom:1rem}twitterwidget{margin-bottom:1em!important}a{color:#2a7cb2;font-weight:inherit;text-decoration:none;transition:color .15s ease-out,border-bottom-color .15s ease-out}a:hover{color:#2a7cb2}abbr{border-bottom:1px dashed #ccc;text-decoration:none}p a{border-bottom:1px solid #eee}p a:hover{border-bottom-color:#212121}strong{font-weight:700}em{font-style:italic}h1{font-size:1.7rem}h2{color:#444;display:inline-block;font-size:1.6rem;font-weight:400;margin-top:1rem}h3{color:#666;display:inline-block;font-size:1.4rem;font-weight:400;margin-top:1rem}h4{font-size:1.18rem}h5{font-size:1rem}a h1,a h2,a h3,a h4,a h5{transition:color .15s ease-out}a:hover h1,a:hover h2,a:hover h3,a:hover h4,a:hover h5{color:#3498db}.quote{margin:0 0 15px 0}blockquote{border-left:2px solid #ccc;font-style:italic;margin:0 0 15px 0;padding-left:20px}ol,ul{margin:0 0 15px 0;padding-left:25px}ul{list-style:square}ol{list-style:decimal}hr{background:#eee;color:#eee;clear:both;display:block;height:2px;margin:30px auto;width:50%}code,pre{color:#333;font-family:Courier,Menlo,Monaco;font-size:.8em;letter-spacing:0;overflow-x:auto}pre{padding:.8em 1em;white-space:pre-wrap}code{margin:0}.post::after{display:block;clear:both;content:""}.main-header{background-color:#005689;font-family:"Helvetica Neue",Helvetica,Arial,sans-serif;overflow:hidden;margin-bottom:1.5rem;padding:1rem;position:relative;text-align:center;width:100%}#menu{display:inline-block;line-height:2rem}#menu a{color:#fff;font-size:.9rem;margin-left:1rem;padding:1rem .5rem;text-transform:uppercase}@media (max-width:500px){#menu a{margin-left:.5rem;padding:.5rem .25rem}}#menu a:first-child{margin-left:0}#menu a[aria-current]{font-weight:700}#page{margin:0 auto;max-width:41rem;padding-left:1.5rem;padding-right:1.5rem;position:relative}.videoWrapper{height:0;margin-bottom:1em;padding-bottom:56.25%;padding-top:25px;position:relative}.videoWrapper amp-youtube,.videoWrapper iframe{height:100%;left:0;position:absolute;top:0;width:100%}.wrapper{border-top:2px solid #eee;padding-top:2rem}.wrapper:first-child{border-top:none;padding-top:1rem}.posts-list h2{margin-top:0}.post{display:block;margin-bottom:2rem;width:100%}.post div[itemprop=articleBody]>p:first-child{color:#333}.post li{margin-bottom:.5rem}.post p+img{margin-bottom:1rem}.post p img{border:1px solid #eee;display:block;max-width:100%}.post img+.caption,.post img+figcaption{padding-top:.5rem}.post .svg-container{margin-bottom:5%;max-width:100%;text-align:center}figure{padding-bottom:1em}video{height:auto;max-width:100%}.post .svg-container object{width:100%}.tag-list{display:inline-block;list-style-type:none;margin:0;padding:0;padding-bottom:1rem}.tag-list-item{display:inline-block;margin-left:.8em}.pagination{padding-bottom:1rem;text-align:center}.pagination a{min-width:30px;max-height:30px;text-align:center}footer{border-top:1px dashed #ddd;padding:2em;text-align:center}.timing-stats{font-size:.7em;padding:.35em}.button{background-color:#fff;border:1px solid #555;border-radius:2rem;color:#555;display:inline-block;padding:.5rem 1rem;transition:background-color .15s ease-out}.button:hover{background-color:#3498db;border-color:transparent;color:#fff}.button.inactive{background-color:#ccc;color:#fff}.search-goog input{border:2px solid #ddd;padding:10px}.search-goog input[type=submit]{background-color:#ddd;cursor:pointer}@media (max-width:768px){#page,.wrapper{margin:0;max-width:100%;width:100%}.wrapper{padding-top:2rem}.wraper::after{clear:both;content:"";display:block}}.outscreen{height:1px;left:-1000px;overflow:hidden;position:absolute;top:auto;width:1px}.callout{border:1px solid #eee;border-left-color:#777;border-left-width:5px;border-radius:3px;font-size:.9rem;padding:20px;margin:20px 0}.author{font-family:"Helvetica Neue",Helvetica,Arial,sans-serif;font-size:.8rem;margin-bottom:1rem}.author .name{line-height:1rem;padding-top:.5rem}.bd,.media{overflow:hidden;zoom:1}.media .img{float:left}.avatar-img{border-radius:100%;height:3rem;margin-right:.5rem;width:3rem}code[class*=language-],pre[class*=language-]{color:#393a34;font-family:Consolas,"Bitstream Vera Sans Mono","Courier New",Courier,monospace;direction:ltr;text-align:left;white-space:pre-wrap;word-spacing:normal;word-break:normal;font-size:.85em;line-height:1.2em;-moz-tab-size:4;-o-tab-size:4;tab-size:4;-webkit-hyphens:none;-moz-hyphens:none;-ms-hyphens:none;hyphens:none}code[class*=language-] ::-moz-selection,code[class*=language-]::-moz-selection,pre[class*=language-] ::-moz-selection,pre[class*=language-]::-moz-selection{background:#b3d4fc}code[class*=language-] ::selection,code[class*=language-]::selection,pre[class*=language-] ::selection,pre[class*=language-]::selection{background:#b3d4fc}pre[class*=language-]{padding:1em;margin:.5em 0;overflow:auto;border:1px solid #ddd;background-color:#fff}:not(pre)>code[class*=language-]{padding:.2em;padding-top:1px;padding-bottom:1px;background:#f8f8f8;border:1px solid #ddd}.token.cdata,.token.comment,.token.doctype,.token.prolog{color:#998;font-style:italic}.token.namespace{opacity:.7}.token.attr-value,.token.string{color:#e3116c}.token.operator,.token.punctuation{color:#393a34}.token.boolean,.token.constant,.token.entity,.token.inserted,.token.number,.token.property,.token.regex,.token.symbol,.token.url,.token.variable{color:#005cc5}.token.keyword{color:#d73a49}.token.atrule,.token.attr-name{color:#6f42c1}.token.deleted,.token.function{color:#6f42c1}.token.selector{color:#00009f}.token.tag{color:#22863a}.token.class-name{color:#6f42c1}.token.bold,.token.important{font-weight:700}.token.italic{font-style:italic}.caption,figcaption{display:block;font-size:.8rem;text-align:center}.codepen-aspect-ratio>iframe{height:100%;position:absolute;width:100%}.twitter-tweet{margin-left:auto;margin-right:auto}.twitter-tweet::after{content:"";display:block;padding-bottom:20px;width:100%}.me{max-width:22rem;margin:0 auto 1rem;text-align:center}.me>div{height:8rem;margin:0 auto;position:relative;width:8rem}.me svg{border-radius:100%;height:100%;left:0;position:absolute;top:0;width:100%}.me img{border-radius:100%;height:100%;position:relative;width:100%}.me h1{font-size:1.7rem;line-height:2rem;margin-bottom:.5rem}.read-next{background-color:#fdf6ea;margin:2rem 0;padding:1em}@media (prefers-color-scheme:dark){body{background:#38444c;color:#eee}a{color:#9dcae8}a:hover{color:#fff}p a{border-bottom:1px solid #6d7a82}p a:hover{border-bottom:1px solid #fff}h1,h2,h3,h4,h5{color:#eee}a:hover h1,a:hover h2,a:hover h3,a:hover h4,a:hover h5{color:#4b89b1}.button:hover{background-color:#4b89b1}code,pre{color:#ddd}.main-header{background-color:#4b89b1}.read-next{background-color:#020915}}.amp-img-wrapper{position:absolute;height:100%;width:100%}</style><link href=/spotify-connect-apiamp/ rel=amphtml><link href=https://webmention.io/jmperezperez.com/webmention rel=webmention /><link href=https://webmention.io/jmperezperez.com/xmlrpc rel=pingback /><meta content=#005689 name=theme-color><link href=/manifest.json rel=manifest><meta content="Hexo 5.4.0" name=generator></head><body><header class=main-header><nav id=menu><a href=/ >Blog</a> <a href=/projects/ >Projects</a> <a href=/talks/ >Speaking</a> <a href=/about-me/ >About</a></nav></header><div id=page><article class=wrapper><div class=post><header><script type=application/ld+json>{
  "@context": "http://schema.org",
  "@type": "BlogPosting",
  "headline": "Playing with the Spotify Connect API",
  
  "description": "The new Web API endpoints let you show what is playing in your Spotify account. It is easy to create views that update in real time.",
  
  "mainEntityOfPage":{
      "@type":"WebPage",
      "@id":"https://jmperezperez.com//spotify-connect-api"
  },
  "datePublished": "2017-04-21T20:10:00.000Z",
  "dateModified": "2018-12-16T17:51:46.000Z",
  
  "image": {
    "@type": "ImageObject",
    "url": "https://jmperezperez.com/assets/images/posts/spotify-connect-api-visualisation-artist.jpg",
    "width" : "1200",
    "height" : "588"
  },
  
  "author": {
      "@type": "Person",
      "name": "Jose M. Perez",
      "url": "https://jmperezperez.com",
      "sameAs": [
        "http://www.linkedin.com/in/jmperezperez",
        "https://twitter.com/jmperezperez"
      ]
  },
  "publisher": {
      "@type": "Organization",
      "name": "Jose M. Perez's Blog"
      
      ,
      "logo": {
        "@type": "ImageObject",
        "url": "https://jmperezperez.com/assets/images/logo.png",
        "width": 600,
        "height": 60
      }
      
  }
}</script><div class="media author"><div class=img><a href="/about-me/?ref=post-header"><img alt="" src=https://res.cloudinary.com/jmperez/image/upload/w_120,f_auto,c_scale/v1519156883/profile_ysrm5y.jpg sizes=53px class=avatar-img height=53 width=53></a></div><div class=bd><address class=name itemprop=author itemscope itemtype=https://schema.org/Person><a href=/about-me/ itemprop=name>José M. Pérez</a></address><meta content=2017-04-21T20:10:00.000Z class=post-data itemprop=datePublished>April 21, 2017<span style="margin:0 .5rem;display:inline-block">|</span> Reading Time: ~<time>6 mins</time></div></div><h1>Playing with the Spotify Connect API</h1></header><p>Spotify <a href=https://developer.spotify.com/news-stories/2017/04/10/new-endpoints-beta-web-api-connect/ rel=noopener target=_blank>released recently a set of endpoints</a> in beta to fetch information of what is playing and send playback commands. This allows for a wide range of integrations and I wanted to hack a bit with it.</p><p><img alt="Spotify Connect" src=/assets/images/posts/spotify-connect.jpg></p><span id=more></span><h4 id=What-is-Spotify-Connect><a href=#What-is-Spotify-Connect class=headerlink title="What is Spotify Connect"></a>What is Spotify Connect</h4><p><a href=https://www.spotify.com/connect/ rel=noopener target=_blank>Spotify Connect</a> is a way to transmit the playback from one device to another one without having to use a physical connection like a cable or bluetooth. You can send the music from your Spotify desktop client to a speaker, from the Spotify app on mobile to Spotify for PlayStation, from the Spotify web player to Chromecast… In short, you have controllers and devices that can play music.</p><p><img alt="Spotify Web Player" src=https://res.cloudinary.com/jmperez/image/upload/w_auto,f_auto,c_scale/v1510477863/spotify-web-player_k5sx2j.png sizes="(max-width: 768px) 100vw, 684px"/> <small class=caption>Spotify’s Web Player (zoomed in). Clicking on the icon next to the volume we get a list of connected devices (FireTV, desktop client, speakers and the web player).</small></p><p>Your application can become a controller through the Web API endpoints, getting information about what is playing currently and from where, being able to transmit the playback to another connected device or interact with the current context (pausing, changing the volume, skipping, playing something else…).</p><h4 id=How-to-use-the-endpoints><a href=#How-to-use-the-endpoints class=headerlink title="How to use the endpoints"></a>How to use the endpoints</h4><p>Before using the Connect endpoints we need to obtain an access token on behalf of the user with certain permissions. There is more information about what scopes are needed in the documentation for each endpoint.</p><p>You don’t need to have a premium account to get the playback status, a free account is alright. You will do need a premium one if you want to <a href=https://developer.spotify.com/web-api/working-with-connect/#premium-only rel=noopener target=_blank>send commands to change the playback</a>.</p><p>A caveat at the moment is that the endpoints don’t support any kind of web socket connection nor long polling. Thus, if you want to get updates on the position of the current playing track or any other change in the context, you need to poll every few seconds.</p><h4 id=A-small-library-to-make-it-easier-to-use-the-endpoints><a href=#A-small-library-to-make-it-easier-to-use-the-endpoints class=headerlink title="A small library to make it easier to use the endpoints"></a>A small library to make it easier to use the endpoints</h4><p>The trickiest part of using the Spotify Web API is to implement the authorization flow. <a href=https://developer.spotify.com/web-api/authorization-guide/ rel=noopener target=_blank>The Authorization Guide</a> does a good job explaining it, but I thought I could do something so developers wouldn’t need to worry about setting up the whole flow, hiding away the authentication and just getting.</p><p>That’s why I have created <a href=https://github.com/JMPerez/spotify-player rel=noopener target=_blank>spotify-player</a>. It’s both a server and a library that you use to communicate with it. To use it, you just need to include a script, call login() and subscribe to the updates:</p><pre class=language-html><code class=language-html><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://spotify-player.herokuapp.com/spotify-player.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>
</code></pre><pre class=language-js><code class=language-js><span class="token keyword">var</span> spotifyPlayer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SpotifyPlayer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

spotifyPlayer<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'update'</span><span class="token punctuation">,</span> response <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>
  <span class="token comment" spellcheck=true>// render the track received</span>
<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

spotifyPlayer<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'login'</span><span class="token punctuation">,</span> user <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>user <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>
    <span class="token comment" spellcheck=true>// no user</span>
  <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> <span class="token keyword">else</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>
    <span class="token comment" spellcheck=true>// say hello to the user, and tell them to play something!</span>
  <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>
<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

spotifyPlayer<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

spotifyPlayer<span class="token punctuation">.</span><span class="token function">login</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><p>You can forget about <a href=https://developer.spotify.com/my-applications rel=noopener target=_blank>setting up a Spotify application</a> and a server, carrying out the token exchange, token refresh, and persisting the current user, <strong>so you can focus on the fun part</strong>.</p><p>Other methods include a function to make calls to other Spotify endpoints reusing the same access token, so you can fetch other data that can help you creating a more complete visualisation.</p><p>Let’s have a look at <a href=https://codepen.io/jmperez/full/MmwObE rel=noopener target=_blank>this pen</a> as an example of a basic visualisation:</p><iframe allowfullscreen frameborder=no height=389 src="//codepen.io/jmperez/embed/MmwObE?height=389&theme-id=0&slug-hash=MmwObE&default-tab=result" allowtransparency=true class=cp_embed_iframe data-amp-width=100% id=cp_embed_MmwObE scrolling=no style=width:100%;overflow:hidden></iframe><p>And in case you can’t try it or don’t have a Spotify account this is pretty much what it looks like:</p><p><img alt="Example of a visualisation of Spotify" src=https://res.cloudinary.com/jmperez/image/upload/w_auto,f_auto,c_scale/v1510476629/spotify-connect-api-visualisation-example_hwu7uw.jpg sizes="(max-width: 768px) 100vw, 684px"/> <small class=caption>See <a href=https://codepen.io/jmperez/full/MmwObE rel=noopener target=_blank>the Pen on Codepen</a></small></p><p>I have kept the example very basic since the point is understanding the usage of the library. If you are into performance and UX you’ll see there is room for improvement, but as a front-end developer I know an example can get out of hand very easily when adding things.</p><p>I encourage you to fork it and start making your own visualisation. And once you do it, ping me so I include it in <a href=https://codepen.io/collection/AyVBYB rel=noopener target=_blank>this Codepen collection</a>.</p><h3 id=Possible-applications><a href=#Possible-applications class=headerlink title="Possible applications"></a>Possible applications</h3><p><em>Disclaimer: This is a list of some use cases. You still need to comply with <a href=https://developer.spotify.com/developer-terms-of-use/ rel=noopener target=_blank>Spotify’s terms of use</a> when implementing an application that uses Spotify’sWeb API. This might mean adding certain messaging and link to the song in Spotify.</em></p><h4 id=Dynamic-visualisations><a href=#Dynamic-visualisations class=headerlink title="Dynamic visualisations"></a>Dynamic visualisations</h4><p>You could combine the playback position with <a href=https://developer.spotify.com/web-api/get-audio-analysis/ rel=noopener target=_blank>the audio analysis of the track</a> to generate dynamic visualisations using loudness, tempo, key, timbre or pitch of the segments that compose the track. You can also use <a href=https://developer.spotify.com/web-api/get-audio-features/ rel=noopener target=_blank>the endpoint to fetch audio features of a track</a>, which gives you high level information about characteristics of the song.</p><div class=videoWrapper><iframe allowfullscreen frameborder=0 height=405 src=https://www.youtube.com/embed/KO9huh-Y03g width=720></iframe></div><p><small class=caption>See <a href=https://codepen.io/jmperez/full/GmJOMJ rel=noopener target=_blank>the Pen on Codepen</a> and <a href=https://github.com/possan/webgl-spotify-connect-now-playing-screen-example rel=noopener target=_blank>Possan’s original visualisation on GitHub</a></small></p><h4 id=Now-playing-view><a href=#Now-playing-view class=headerlink title="Now playing view"></a>Now playing view</h4><p>Are you a coffee-shop owner and people always wonder what song is playing? You could have a TV showing a branded now playing view. You could even have a widget on your website, or a script posting to a social network what is currently playing so your customers know. Or a small browser extension showing what is playing and/or <a href=https://developer.chrome.com/extensions/notifications rel=noopener target=_blank>showing desktop notifications</a> when the track changes.</p><p><img alt="Spotify Visualisation showing Web Notifications when the track changes" src=https://res.cloudinary.com/jmperez/image/upload/w_auto,f_auto,c_scale/v1510477615/spotify-connect-api-visualisation-notification_mgxad5.jpg sizes="(max-width: 768px) 100vw, 684px"/> <small class=caption>See <a href=https://codepen.io/jmperez/full/VbvPbR rel=noopener target=_blank>the Pen on Codepen</a>. When the track changes the browser shows a Web Notification.</small></p><p>Or if you are at home hosting a dinner or party, show on the TV or computer what is playing.</p><p>You can combine other Spotify Web API endpoints too. Eg you could <a href=https://developer.spotify.com/web-api/get-artist/ rel=noopener target=_blank>fetch the artists info</a> to show the artist profile image in the background:</p><p><img alt="Spotify Visualisation showing the artist profile image in the background" src=https://res.cloudinary.com/jmperez/image/upload/w_auto,f_auto,c_scale/v1510477674/spotify-connect-api-visualisation-artist_ebk7cc.jpg sizes="(max-width: 768px) 100vw, 684px"/> <small class=caption>See <a href=https://codepen.io/jmperez/full/YVXEaz rel=noopener target=_blank>the Pen on Codepen</a>. A simple visualisation of what’s playing in Spotify rendering the artist profile image as the background.</small></p><p>You could use an API like <a href=https://developer.musixmatch.com/ rel=noopener target=_blank>Musixmatch</a>’s and create an app or a website showing the lyrics for the current song, synchronised with the playback position.</p><p>And your imagination is the limit. Use <a href=https://genius.com/developers rel=noopener target=_blank>Genius’ API</a> to get <a href=https://docs.genius.com/#annotations-h2 rel=noopener target=_blank>annotations</a> about a song, or search for trivia and more info about the song or artist using <a href=https://www.mediawiki.org/wiki/API:Main_page rel=noopener target=_blank>Wikipedia’s API</a>. And if you don’t want to miss what’s happening in the world, implement a news ticker in your view using <a href=https://newsapi.org/ rel=noopener target=_blank>News API</a>.</p><div class=videoWrapper><iframe allowfullscreen frameborder=0 height=405 src=https://www.youtube.com/embed/q4I3ymLgewE width=720></iframe></div><p><small class=caption>See <a href=https://codepen.io/jmperez/full/OmVKOO rel=noopener target=_blank>the Pen on Codepen</a><small class=caption></small></small></p><h4 id=MVP><a href=#MVP class=headerlink title=MVP></a>MVP</h4><p><a href=https://github.com/JMPerez/spotify-player rel=noopener target=_blank>The library</a> is really small and it only supports <em>reading</em> the playback state and not send commands. Let’s call it an MVP. I might work on adding more features in the future.</p></div><hr/>Tags:<ul class=tag-list itemprop=keywords><li class=tag-list-item><a href=/tags/spotify/ rel=tag class=tag-list-link>spotify</a></li></ul></article></div><script>"serviceWorker"in navigator&&window.addEventListener("load",function(){navigator.serviceWorker.register("/sw.js").then(function(n){}).catch(function(n){})})</script><footer><section class=links><a href=https://twitter.com/jmperezperez rel="me noopener" target=_blank>@jmperezperez</a> on Twitter · <a href=https://github.com/JMPerez rel="me noopener" target=_blank>GitHub</a> · <a href=https://www.linkedin.com/in/jmperezperez rel=noopener target=_blank>LinkedIn</a> · <a href=https://medium.com/@jmperezperez rel=noopener target=_blank>Medium</a></section><div class=timing-stats></div></footer><script>window.addEventListener("load",()=>{setTimeout(()=>{var e,r,t=window.performance&&performance.timing;function i(e){return Math.round(100*e)/100}t&&(e=document.querySelector(".timing-stats"),r="This page loaded in "+i((t.loadEventEnd-t.navigationStart)/1e3)+" seconds. ",performance.getEntriesByType("paint").forEach(function(e,t,n){var a=e.name;"first-paint"===a?a="<abbr title="+a+">FP</abbr>":"first-contentful-paint"===a&&(a="<abbr title="+a+">FCP</abbr>"),r+=a+" was "+i(e.startTime/1e3)+" seconds. "}),r+='<a href="https://jmperezperez.com/page-load-footer/">More info</a>.',e.innerHTML=r)},0)})</script><script async src=/quicklink.js></script><script async src=https://unpkg.com/turbolinks@5.2.0/dist/turbolinks.js data-turbolinks-suppress-warning></script></body></html>