<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Jose M. Perez&#39;s Blog</title>
  <subtitle>Web development, performance, and some other good practices.</subtitle>
  <link href="/tag/book/atom.xml" rel="self"/>
  
  <link href="https://jmperezperez.com/"/>
  <updated>2018-12-16T17:51:46.000Z</updated>
  <id>https://jmperezperez.com/</id>
  
  <author>
    <name>Jose M. Perez</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Recommended Reading: J2EE AntiPatterns</title>
    <link href="https://jmperezperez.com//recommended-reading-j2ee-antipatterns"/>
    <id>https://jmperezperez.com//recommended-reading-j2ee-antipatterns</id>
    <published>2009-05-24T12:32:20.000Z</published>
    <updated>2018-12-16T17:51:46.000Z</updated>
    
    <content type="html"><![CDATA[<p>J2EE AntiPatterns is a book that teaches design patterns using a different approach.
<img src="/assets/images/posts/j2ee-antipatterns.jpg" alt="j2ee-antipatterns"></p>
<span id="more"></span>
<p>Accustomed to the descriptions of design patterns based on the famous <a href="https://en.wikipedia.org/wiki/Design_Patterns">Design Patterns: Elements of Reusable Object-Oriented Software</a> book, which was the first one in classifying and studying techniques to solve recurring problems in programming, <em>J2EE AntiPatterns</em>, rather than listing various design patterns and explaining in what scenarios each one might be applied (it is true that some are applicable only when using certain languages or in very specific cases), begins showing the problems that we can face when writing code in an object oriented language like Java, and explains how to solve them by proposing a design pattern.</p>
<p>Thus, the reader can see some problems they have faced by writing code or designing an application (repetition of code, copy and paste, lack of flexibility, refactoring, hardcoded content, etc). In the same way design patterns are given a name by which we identify and refer them universally, anti-patterns are also named (Localizing Data, Misunderstanding Data Requirements…).</p>
<p>Although Java is used in the examples to illustrate the cases, the fact is that the content of the book is easily applicable to any object-oriented programming language.</p>
<p>In short, a book that is recommended for those who want to find a way to better understand the design patterns and how they can improve their developments.</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;J2EE AntiPatterns is a book that teaches design patterns using a different approach.
&lt;img src=&quot;/assets/images/posts/j2ee-antipatterns.jpg&quot; alt=&quot;j2ee-antipatterns&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="book" scheme="https://jmperezperez.com/tags/book/"/>
    
      <category term="anti patterns" scheme="https://jmperezperez.com/tags/anti-patterns/"/>
    
      <category term="java" scheme="https://jmperezperez.com/tags/java/"/>
    
      <category term="patterns" scheme="https://jmperezperez.com/tags/patterns/"/>
    
  </entry>
  
  <entry>
    <title>Recommended Reading: Building Findable Websites</title>
    <link href="https://jmperezperez.com//recommended-reading-building-findable-websites"/>
    <id>https://jmperezperez.com//recommended-reading-building-findable-websites</id>
    <published>2009-04-11T13:53:35.000Z</published>
    <updated>2018-12-16T17:51:46.000Z</updated>
    
    <content type="html"><![CDATA[<p>When designing a web site different goals are to be reached, but the main one is to get a high number of visits. To reach this, we could think that the most important point is to get a high position in the search engines (where the SEO analysis focuses) but they require a thorough analysis from the design of the pages to the tools that help to increase the returning visitors, for instance mailing lists and RSS feeds.
<img src="/assets/images/posts/building-findable-websites-cover.jpg" alt="Building Findable Websites Cover"></p>
<span id="more"></span>
<p>Aarron Walter, the author of this book, doesn’t forget to write about the right choice of keywords that reflect the content of the site and are not unduly exploited by other websites, as well as the customization of 404 error pages.</p>
<p>The book gives tips to make our website better indexed, so that indirectly improves its accessibility (making all the content visible to search engine bots will make it more reachable by people with disability).</p>
<p>Chapter 7 “<strong>Preventing Findability Roadblocks</strong>“ is very interesting, since it focuses on techniques to make both the content of our flash movies and the AJAX content accessible for being indexed by search engines, using a technique that layers web sites and make them degrade correctly.</p>
<p>On <a href="http://buildingfindablewebsites.com/">the book’s website</a> we can find more information about useful resources and extra chapters.</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;When designing a web site different goals are to be reached, but the main one is to get a high number of visits. To reach this, we could think that the most important point is to get a high position in the search engines (where the SEO analysis focuses) but they require a thorough analysis from the design of the pages to the tools that help to increase the returning visitors, for instance mailing lists and RSS feeds.
&lt;img src=&quot;/assets/images/posts/building-findable-websites-cover.jpg&quot; alt=&quot;Building Findable Websites Cover&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="book" scheme="https://jmperezperez.com/tags/book/"/>
    
      <category term="seo" scheme="https://jmperezperez.com/tags/seo/"/>
    
  </entry>
  
</feed>
