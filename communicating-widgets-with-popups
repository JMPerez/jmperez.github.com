<!doctype html><html lang=en><head><meta charset=utf-8><meta content="ie=edge" http-equiv=x-ua-compatible><meta content="DPR, Viewport-Width, Width" http-equiv=Accept-CH><title>On widgets, popups and communication between them - José M. Pérez</title><link href=//res.cloudinary.com rel=dns-prefetch /><meta content="How to communicate from an iframe to a popup served from the same domain i.e. when using login forms in popups." name=description><meta content="width=device-width,initial-scale=1,viewport-fit=cover" name=viewport><link href=https://plus.google.com/107456024651797783420 rel=author /><link href=https://jmperezperez.com/feed.xml rel=alternate title="Jose M. Perez" type=application/rss+xml><meta content=summary_large_image name=twitter:card><meta content=https://jmperezperez.com//communicating-widgets-with-popups name=twitter:url property=og:url><meta content="On widgets, popups and communication between them" name=twitter:title property=og:title><meta content="How to communicate from an iframe to a popup served from the same domain i.e. when using login forms in popups." name=twitter:description property=og:description><meta content=@jmperezperez name=twitter:site><meta content=https://jmperezperez.com/assets/images/posts/iframe-widget.png property=og:image><meta content=https://jmperezperez.com/assets/images/posts/iframe-widget.png name=twitter:image><meta content=1702266270006013 property=fb:app_id><meta content=1639848659664211 property=fb:pages /><link href=https://jmperezperez.com//communicating-widgets-with-popups rel=canonical /><style>*{-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;border:none;font:inherit;margin:0;padding:0;vertical-align:baseline}button,input{background:0 0}html{font-size:18px}@media (max-width:768px){html{font-size:16px}}body{background:#fff;color:#555;font-family:Georgia,Times;font-weight:300;font-style:normal;line-height:1.5rem;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;-webkit-text-size-adjust:100%}h1,h2,h3,h4,h5{color:#212121;font-family:"Helvetica Neue",Helvetica,Arial,sans-serif;font-weight:600;line-height:2rem;margin-bottom:1.5rem}#menu a,.button{font-size:1em;font-weight:400}.post ol,.post ul,amp-video,amp-vimeo,amp-youtube,iframe,p,video{margin:0;margin-bottom:1rem}twitterwidget{margin-bottom:1em!important}a{color:#2a7cb2;font-weight:inherit;text-decoration:none;transition:color .15s ease-out,border-bottom-color .15s ease-out}a:hover{color:#2a7cb2}abbr{border-bottom:1px dashed #ccc;text-decoration:none}p a{border-bottom:1px solid #eee}p a:hover{border-bottom-color:#212121}strong{font-weight:700}em{font-style:italic}h1{font-size:1.7rem}h2{color:#444;display:inline-block;font-size:1.6rem;font-weight:400;margin-top:1rem}h3{color:#666;display:inline-block;font-size:1.4rem;font-weight:400;margin-top:1rem}h4{font-size:1.18rem}h5{font-size:1rem}a h1,a h2,a h3,a h4,a h5{transition:color .15s ease-out}a:hover h1,a:hover h2,a:hover h3,a:hover h4,a:hover h5{color:#3498db}.quote{margin:0 0 15px 0}blockquote{border-left:2px solid #ccc;font-style:italic;margin:0 0 15px 0;padding-left:20px}ol,ul{margin:0 0 15px 0;padding-left:25px}ul{list-style:square}ol{list-style:decimal}hr{background:#eee;color:#eee;clear:both;display:block;height:2px;margin:30px auto;width:50%}code,pre{color:#333;font-family:Courier,Menlo,Monaco;font-size:.8em;letter-spacing:0;overflow-x:auto}pre{padding:.8em 1em;white-space:pre-wrap}code{margin:0}.post::after{display:block;clear:both;content:""}.main-header{background-color:#005689;font-family:"Helvetica Neue",Helvetica,Arial,sans-serif;overflow:hidden;margin-bottom:1.5rem;padding:1rem;position:relative;text-align:center;width:100%}#menu{display:inline-block;line-height:2rem}#menu a{color:#fff;font-size:.9rem;margin-left:1rem;padding:1rem .5rem;text-transform:uppercase}@media (max-width:500px){#menu a{margin-left:.5rem;padding:.5rem .25rem}}#menu a:first-child{margin-left:0}#menu a[aria-current]{font-weight:700}#page{margin:0 auto;max-width:41rem;padding-left:1.5rem;padding-right:1.5rem;position:relative}.videoWrapper{height:0;margin-bottom:1em;padding-bottom:56.25%;padding-top:25px;position:relative}.videoWrapper amp-youtube,.videoWrapper iframe{height:100%;left:0;position:absolute;top:0;width:100%}.wrapper{border-top:2px solid #eee;padding-top:2rem}.wrapper:first-child{border-top:none;padding-top:1rem}.posts-list h2{margin-top:0}.post{display:block;margin-bottom:2rem;width:100%}.post div[itemprop=articleBody]>p:first-child{color:#333}.post li{margin-bottom:.5rem}.post p+img{margin-bottom:1rem}.post p img{border:1px solid #eee;display:block;max-width:100%}.post img+.caption,.post img+figcaption{padding-top:.5rem}.post .svg-container{margin-bottom:5%;max-width:100%;text-align:center}figure{padding-bottom:1em}video{height:auto;max-width:100%}.post .svg-container object{width:100%}.tag-list{display:inline-block;list-style-type:none;margin:0;padding:0;padding-bottom:1rem}.tag-list-item{display:inline-block;margin-left:.8em}.pagination{padding-bottom:1rem;text-align:center}.pagination a{min-width:30px;max-height:30px;text-align:center}footer{border-top:1px dashed #ddd;padding:2em;text-align:center}.timing-stats{font-size:.7em;padding:.35em}.button{background-color:#fff;border:1px solid #555;border-radius:2rem;color:#555;display:inline-block;padding:.5rem 1rem;transition:background-color .15s ease-out}.button:hover{background-color:#3498db;border-color:transparent;color:#fff}.button.inactive{background-color:#ccc;color:#fff}.search-goog input{border:2px solid #ddd;padding:10px}.search-goog input[type=submit]{background-color:#ddd;cursor:pointer}@media (max-width:768px){#page,.wrapper{margin:0;max-width:100%;width:100%}.wrapper{padding-top:2rem}.wraper::after{clear:both;content:"";display:block}}.outscreen{height:1px;left:-1000px;overflow:hidden;position:absolute;top:auto;width:1px}.callout{border:1px solid #eee;border-left-color:#777;border-left-width:5px;border-radius:3px;font-size:.9rem;padding:20px;margin:20px 0}.author{font-family:"Helvetica Neue",Helvetica,Arial,sans-serif;font-size:.8rem;margin-bottom:1rem}.author .name{line-height:1rem;padding-top:.5rem}.bd,.media{overflow:hidden;zoom:1}.media .img{float:left}.avatar-img{border-radius:100%;height:3rem;margin-right:.5rem;width:3rem}code[class*=language-],pre[class*=language-]{color:#393a34;font-family:Consolas,"Bitstream Vera Sans Mono","Courier New",Courier,monospace;direction:ltr;text-align:left;white-space:pre-wrap;word-spacing:normal;word-break:normal;font-size:.85em;line-height:1.2em;-moz-tab-size:4;-o-tab-size:4;tab-size:4;-webkit-hyphens:none;-moz-hyphens:none;-ms-hyphens:none;hyphens:none}code[class*=language-] ::-moz-selection,code[class*=language-]::-moz-selection,pre[class*=language-] ::-moz-selection,pre[class*=language-]::-moz-selection{background:#b3d4fc}code[class*=language-] ::selection,code[class*=language-]::selection,pre[class*=language-] ::selection,pre[class*=language-]::selection{background:#b3d4fc}pre[class*=language-]{padding:1em;margin:.5em 0;overflow:auto;border:1px solid #ddd;background-color:#fff}:not(pre)>code[class*=language-]{padding:.2em;padding-top:1px;padding-bottom:1px;background:#f8f8f8;border:1px solid #ddd}.token.cdata,.token.comment,.token.doctype,.token.prolog{color:#998;font-style:italic}.token.namespace{opacity:.7}.token.attr-value,.token.string{color:#e3116c}.token.operator,.token.punctuation{color:#393a34}.token.boolean,.token.constant,.token.entity,.token.inserted,.token.number,.token.property,.token.regex,.token.symbol,.token.url,.token.variable{color:#005cc5}.token.keyword{color:#d73a49}.token.atrule,.token.attr-name{color:#6f42c1}.token.deleted,.token.function{color:#6f42c1}.token.selector{color:#00009f}.token.tag{color:#22863a}.token.class-name{color:#6f42c1}.token.bold,.token.important{font-weight:700}.token.italic{font-style:italic}.caption,figcaption{display:block;font-size:.8rem;text-align:center}.codepen-aspect-ratio>iframe{height:100%;position:absolute;width:100%}.twitter-tweet{margin-left:auto;margin-right:auto}.twitter-tweet::after{content:"";display:block;padding-bottom:20px;width:100%}.me{max-width:22rem;margin:0 auto 1rem;text-align:center}.me>div{height:8rem;margin:0 auto;position:relative;width:8rem}.me svg{border-radius:100%;height:100%;left:0;position:absolute;top:0;width:100%}.me img{border-radius:100%;height:100%;position:relative;width:100%}.me h1{font-size:1.7rem;line-height:2rem;margin-bottom:.5rem}.read-next{background-color:#fdf6ea;margin:2rem 0;padding:1em}@media (prefers-color-scheme:dark){body{background:#38444c;color:#eee}a{color:#9dcae8}a:hover{color:#fff}p a{border-bottom:1px solid #6d7a82}p a:hover{border-bottom:1px solid #fff}h1,h2,h3,h4,h5{color:#eee}a:hover h1,a:hover h2,a:hover h3,a:hover h4,a:hover h5{color:#4b89b1}.button:hover{background-color:#4b89b1}code,pre{color:#ddd}.main-header{background-color:#4b89b1}.read-next{background-color:#020915}}.amp-img-wrapper{position:absolute;height:100%;width:100%}</style><link href=/communicating-widgets-with-popupsamp/ rel=amphtml><link href=https://webmention.io/jmperezperez.com/webmention rel=webmention /><link href=https://webmention.io/jmperezperez.com/xmlrpc rel=pingback /><meta content=#005689 name=theme-color><link href=/manifest.json rel=manifest><meta content="Hexo 5.4.0" name=generator></head><body><header class=main-header><nav id=menu><a href=/ >Blog</a> <a href=/projects/ >Projects</a> <a href=/talks/ >Speaking</a> <a href=/about-me/ >About</a></nav></header><div id=page><article class=wrapper><div class=post><header><script type=application/ld+json>{
  "@context": "http://schema.org",
  "@type": "BlogPosting",
  "headline": "On widgets, popups and communication between them",
  
  "description": "How to communicate from an iframe to a popup served from the same domain i.e. when using login forms in popups.",
  
  "mainEntityOfPage":{
      "@type":"WebPage",
      "@id":"https://jmperezperez.com//communicating-widgets-with-popups"
  },
  "datePublished": "2014-12-13T09:45:00.000Z",
  "dateModified": "2018-12-16T17:51:46.000Z",
  
  "image": {
    "@type": "ImageObject",
    "url": "https://jmperezperez.com/assets/images/posts/iframe-widget.png",
    "width" : "479",
    "height" : "406"
  },
  
  "author": {
      "@type": "Person",
      "name": "Jose M. Perez",
      "url": "https://jmperezperez.com",
      "sameAs": [
        "http://www.linkedin.com/in/jmperezperez",
        "https://twitter.com/jmperezperez"
      ]
  },
  "publisher": {
      "@type": "Organization",
      "name": "Jose M. Perez's Blog"
      
      ,
      "logo": {
        "@type": "ImageObject",
        "url": "https://jmperezperez.com/assets/images/logo.png",
        "width": 600,
        "height": 60
      }
      
  }
}</script><div class="media author"><div class=img><a href="/about-me/?ref=post-header"><img alt="" src=https://res.cloudinary.com/jmperez/image/upload/w_120,f_auto,c_scale/v1519156883/profile_ysrm5y.jpg class=avatar-img height=53 sizes=53px width=53></a></div><div class=bd><address class=name itemprop=author itemscope itemtype=https://schema.org/Person><a href=/about-me/ itemprop=name>José M. Pérez</a></address><meta content=2014-12-13T09:45:00.000Z class=post-data itemprop=datePublished>December 13, 2014<span style="margin:0 .5rem;display:inline-block">|</span> Reading Time: ~<time>5 mins</time></div></div><h1>On widgets, popups and communication between them</h1></header><p><strong>tl;dr</strong>: Communication between an iframe and a popup is not straightforward. If you are implementing a widget-ish element that needs to communicate with other page, Have a read at this (and test your solution on multiple platforms).</p><span id=more></span><h3 id=An-overview><a href=#An-overview class=headerlink title="An overview"></a>An overview</h3><p>Imagine you want to develop a widget that can be embedded as an iframe in any website. The widget consists mainly on a button that will perform an action. You have seen this before: <em>Like</em> for Facebook, <em>Follow</em> for Twitter, <em>Follow</em> or <em>Share</em> for LinkedIn.</p><p>When you click the button you will be prompted with a login form (if not logged in on the service) and after a successful login you will be liking/following/sharing what you wanted.</p><h3 id=On-popups-and-redirections><a href=#On-popups-and-redirections class=headerlink title="On popups and redirections"></a>On popups and redirections</h3><p>You probably want the login form to be displayed in a not too intrusive way. You might want to embed it in an iframe, but this shouldn’t be allowed by the service. An iframe would hide the URL of the login page, and URLs are a guarantee for the user that the form belongs to the site it is supposed to belong. Otherwise it would be hard to distinguish whether the login form comes from the real site or it is a phishing attempt.</p><p>The alternatives are opening a popup or redirecting the user to the login form. I personally like the popup solution. It doesn’t cover the whole page, keeps the context of the widget at sight, and also keeps the state of the page.</p><p>Working with popups means that you need to think carefully what is going to happen from the moment the user clicks the button until you want to open the popup. As soon as a function execution is not a direct result of an action initiated by the user. This makes totally sense, since we don’t want to see unsolicited popups opening while we see a page. As you see, we have again the browser preventing malicious behaviours, but making it difficult for developers that just want to use features for the good.</p><p>Opening a popup seems a plausible solution. The login form will return some type of identifier / access token to the iframe when the user logs in. It seems easy but…</p><h3 id=Defining-the-scenario><a href=#Defining-the-scenario class=headerlink title="Defining the scenario"></a>Defining the scenario</h3><p>Let’s suppose that the site <code>www.example.com</code> embeds an iframe (from now on, <strong>the iframe</strong>) served from <code>www.widget.com</code>. The iframe will try to open a popup (from now on, <strong>the popup</strong>) served from the same domain as the widget. That popup will show a login form and will try to communicate back to the iframe when the user logs in. <img alt="A widget and a popup served from a different domain." src=/assets/images/posts/widget-popup-different-domain.png></p><h3 id=I-didn’t-tell-you-about-mobile><a href=#I-didn’t-tell-you-about-mobile class=headerlink title="I didn’t tell you about mobile"></a>I didn’t tell you about mobile</h3><p>On a mobile browser, a popup opens a new tab, which is more suitable for their screen sizes. Apart from that, the OS can perform some optimizations to save memory and CPU due to foregrounded browser tabs.</p><p>Note: I haven’t performed a deep research to see what combinations of operating system and browser exhibit each of these issues. But it’s enough with one of them failing to try to implement a workaround.</p><h4 id="window-opener-is-undefined"><a href="#window-opener-is-undefined" class=headerlink title="window.opener is undefined"></a><code>window.opener</code> is undefined</h4><p>So you try this:</p><pre><code>var w = window.open(&lt;login_url&gt;,...)
</code></pre><p>then you would expect <code>&lt;login_url&gt;</code> to have access to <code>window.opener</code>. However, iOS won’t keep a reference to the opener. This prevents us from exposing a function in the iframe that we can access from the popup.</p><p>Try it on <a href=http://jsfiddle.net/JMPerez/hgvsejvb/show/ rel=noopener target=_blank>JSFiddle</a>.</p><h4 id=storage-is-not-triggered-when-writing-in-localStorage><a href=#storage-is-not-triggered-when-writing-in-localStorage class=headerlink title="storage is not triggered when writing in localStorage"></a><code>storage</code> is not triggered when writing in <code>localStorage</code></h4><p>On iOS, don’t expect a <code>storage</code> event to be triggered from the popup and capture it from the iframe. It won’t.</p><h4 id=window-open-doesn’t-keep-a-reference-to-the-popup><a href=#window-open-doesn’t-keep-a-reference-to-the-popup class=headerlink title="window.open doesn’t keep a reference to the popup"></a>window.open doesn’t keep a reference to the popup</h4><p>On Chrome for iOS, you would do:</p><pre><code>var w = window.open(&lt;login_url&gt;,...);
console.log(w);   // prints undefined
</code></pre><p><code>w</code> should have a reference to the opened popup, which we could use, for instance, to poll its <code>w.closed</code> attribute to see if the user has closed it. This would be useful to detect that the user ignored the login form. However, <code>w</code> won’t store a reference to the popup on Chrome for iOS.</p><p>Try it on <a href=http://jsfiddle.net/JMPerez/4d0g5csa/show rel=noopener target=_blank>JSFiddle</a>.</p><h4 id=window-close-doesn’t-work-in-the-popup><a href=#window-close-doesn’t-work-in-the-popup class=headerlink title="window.close doesn’t work in the popup"></a>window.close doesn’t work in the popup</h4><p>On Safari for iOS you can’t close yourself. This means that if you were thinking of passing the information to the iframe and then close yourself, you won’t be able to do that.</p><p>Try it on <a href=http://jsfiddle.net/JMPerez/18yzm54k/show rel=noopener target=_blank>JSFiddle</a>.</p><h3 id=More-limitations><a href=#More-limitations class=headerlink title="More limitations"></a>More limitations</h3><p>If you have read so far you will wonder whether there are still more issues. And yes, there are. One could assume that mobile browsers limit our functionality for saving resources, but now we have also the browsers using quite restrictive privacy preferences.</p><p>Welcome Safari 8 and IE 11.</p><h4 id=Reading-localStorage-from-a-host-different-than-the-page’s-host-will-fail><a href=#Reading-localStorage-from-a-host-different-than-the-page’s-host-will-fail class=headerlink title="Reading localStorage from a host different than the page’s host will fail"></a>Reading localStorage from a host different than the page’s host will fail</h4><p>Some browsers come with default privacy preferences that will prevent you from carrying out certain operations. <a href=/assets/images/posts/safari-8-privacy-settings.png><img alt="Privacy settings in Safari 8" src=/assets/images/posts/safari-8-privacy-settings.png></a></p><p>In the image above you can see Safari 8’s default privacy settings, with “Allow from websites I visit” checked.</p><p>You have learnt that passing messages from the popup to the parent is tricky. You then try to use <code>localStorage</code>. Then you realise browsers are blocking these read operations. Note that the iframe is served from a different host. The popup could write to localStorage, but the iframe served from the same host won’t be able to read its value.</p><p>However, a <code>storage</code> event will be triggered when writing in localStorage containing the new stored value. You can read the new value when capturing the event, but not if you try to access localStorage afterwards. Weird, but this is how it works.</p><p>And even weirder is that even though localStorage is being blocked, from the iframe you are able to read cookies written from the popup. One would assume that the same limitations should apply to cookies, but that’s not the case.</p><h3 id=What-to-do><a href=#What-to-do class=headerlink title="What to do"></a>What to do</h3><p>So far, the best way I have found is:</p><ul><li>The popup will show a message like “If I don’t close myself, close me”.</li><li>The popup will write cookies and will write to localStorage</li><li>The iframe will listen to the <code>storage</code> event and will poll the cookies.</li></ul><p>It’s far from ideal but kind of works.</p></div><hr/>Tags:<ul class=tag-list itemprop=keywords><li class=tag-list-item><a href=/tags/iframe/ class=tag-list-link rel=tag>iframe</a></li><li class=tag-list-item><a href=/tags/popup/ class=tag-list-link rel=tag>popup</a></li></ul></article></div><script>"serviceWorker"in navigator&&window.addEventListener("load",function(){navigator.serviceWorker.register("/sw.js").then(function(n){}).catch(function(n){})})</script><footer><section class=links><a href=https://twitter.com/jmperezperez rel="me noopener" target=_blank>@jmperezperez</a> on Twitter · <a href=https://github.com/JMPerez rel="me noopener" target=_blank>GitHub</a> · <a href=https://www.linkedin.com/in/jmperezperez rel=noopener target=_blank>LinkedIn</a> · <a href=https://medium.com/@jmperezperez rel=noopener target=_blank>Medium</a></section><div class=timing-stats></div></footer><script>window.addEventListener("load",()=>{setTimeout(()=>{var e,r,t=window.performance&&performance.timing;function i(e){return Math.round(100*e)/100}t&&(e=document.querySelector(".timing-stats"),r="This page loaded in "+i((t.loadEventEnd-t.navigationStart)/1e3)+" seconds. ",performance.getEntriesByType("paint").forEach(function(e,t,n){var a=e.name;"first-paint"===a?a="<abbr title="+a+">FP</abbr>":"first-contentful-paint"===a&&(a="<abbr title="+a+">FCP</abbr>"),r+=a+" was "+i(e.startTime/1e3)+" seconds. "}),r+='<a href="https://jmperezperez.com/page-load-footer/">More info</a>.',e.innerHTML=r)},0)})</script><script async src=/quicklink.js></script><script async src=https://unpkg.com/turbolinks@5.2.0/dist/turbolinks.js data-turbolinks-suppress-warning></script></body></html>